{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { Link, Box, VStack, Text, Container, Center } from 'native-base';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TitleBar from \"../General/TitleBar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar getUP = function () {\n  var _ref = _asyncToGenerator(function* () {\n    var userplantss = yield API.getUserPlants().catch(function (err) {\n      return window.alert('Error while getting riddles');\n    });\n    setRiddles(riddles);\n  });\n  return function getUP() {\n    return _ref.apply(this, arguments);\n  };\n}();\nfunction MyPlants(props) {\n  return _jsxs(VStack, {\n    children: [_jsx(TitleBar, {\n      name: \"My Plants\"\n    }), props.userplants.map(function (plant) {\n      return _jsx(PlantBox, {\n        plant: plant\n      });\n    })]\n  });\n}\nfunction PlantBox(props) {\n  return _jsxs(Center, {\n    children: [_jsx(Box, {\n      top: 20,\n      backgroundColor: \"#A7C957\",\n      width: \"80\",\n      height: \"50\",\n      borderRadius: \"70\",\n      children: _jsx(Container, {\n        children: _jsx(Text, {\n          top: \"3\",\n          left: \"20\",\n          children: props.plant\n        })\n      })\n    }), _jsx(Box, {\n      height: \"10\"\n    })]\n  });\n}\nexport default MyPlants;","map":{"version":3,"names":["Link","Box","VStack","Text","Container","Center","TitleBar","getUP","userplantss","API","getUserPlants","catch","err","window","alert","setRiddles","riddles","MyPlants","props","userplants","map","plant","PlantBox"],"sources":["C:/Users/riki_/OneDrive/Desktop/Giancono/A6/client/Components/MyPlants/MyPlants.js"],"sourcesContent":["import {Link, Box, VStack, Text, Container, Center} from 'native-base';\r\nimport { Pressable } from 'react-native';\r\n\r\nimport TitleBar from '../General/TitleBar';\r\n\r\nconst getUP = async() => {\r\n  const userplantss = await API.getUserPlants()\r\n  .catch((err) => window.alert('Error while getting riddles'));\r\n  setRiddles(riddles);\r\n};\r\n\r\nfunction MyPlants(props){\r\n\r\n    return(\r\n      <VStack>\r\n        <TitleBar name='My Plants'/>\r\n        {props.userplants.map((plant)=> <PlantBox plant={plant}/>)}\r\n      </VStack>\r\n    );\r\n}\r\n\r\nfunction PlantBox(props){\r\n  return(\r\n  <Center>\r\n        <Box top={20} backgroundColor='#A7C957' width='80' height='50' borderRadius='70'>\r\n          <Container><Text top='3' left='20'>{props.plant}</Text></Container>\r\n        </Box><Box height='10'></Box></Center>);\r\n}\r\n\r\n\r\nexport default MyPlants;\r\n"],"mappings":";AAAA,SAAQA,IAAI,EAAEC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEC,SAAS,EAAEC,MAAM,QAAO,aAAa;AAAC;AAGvE,OAAOC,QAAQ;AAA4B;AAAA;AAE3C,IAAMC,KAAK;EAAA,6BAAG,aAAW;IACvB,IAAMC,WAAW,SAASC,GAAG,CAACC,aAAa,EAAE,CAC5CC,KAAK,CAAC,UAACC,GAAG;MAAA,OAAKC,MAAM,CAACC,KAAK,CAAC,6BAA6B,CAAC;IAAA,EAAC;IAC5DC,UAAU,CAACC,OAAO,CAAC;EACrB,CAAC;EAAA,gBAJKT,KAAK;IAAA;EAAA;AAAA,GAIV;AAED,SAASU,QAAQ,CAACC,KAAK,EAAC;EAEpB,OACE,MAAC,MAAM;IAAA,WACL,KAAC,QAAQ;MAAC,IAAI,EAAC;IAAW,EAAE,EAC3BA,KAAK,CAACC,UAAU,CAACC,GAAG,CAAC,UAACC,KAAK;MAAA,OAAI,KAAC,QAAQ;QAAC,KAAK,EAAEA;MAAM,EAAE;IAAA,EAAC;EAAA,EACnD;AAEf;AAEA,SAASC,QAAQ,CAACJ,KAAK,EAAC;EACtB,OACA,MAAC,MAAM;IAAA,WACD,KAAC,GAAG;MAAC,GAAG,EAAE,EAAG;MAAC,eAAe,EAAC,SAAS;MAAC,KAAK,EAAC,IAAI;MAAC,MAAM,EAAC,IAAI;MAAC,YAAY,EAAC,IAAI;MAAA,UAC9E,KAAC,SAAS;QAAA,UAAC,KAAC,IAAI;UAAC,GAAG,EAAC,GAAG;UAAC,IAAI,EAAC,IAAI;UAAA,UAAEA,KAAK,CAACG;QAAK;MAAQ;IAAY,EAC/D,OAAC,GAAG;MAAC,MAAM,EAAC;IAAI,EAAO;EAAA,EAAS;AAC9C;AAGA,eAAeJ,QAAQ"},"metadata":{},"sourceType":"module"}